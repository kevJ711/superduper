name: Code Testing

on:
  pull_request:
    branches:
      - main
      - '[0-9]+.[0-9]+'
    paths: # Paths that may affect code quality
      - 'superduper/**'
      - 'test/**'
      - 'pyproject.toml'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.job }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:

  # ---------------------------------
  # Code Scanning
  # ---------------------------------
  code_scanning:
    runs-on: "ubuntu-latest"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Validate Changelog Update
      uses: tarides/changelog-check-action@v2
      with:
        changelog: CHANGELOG.md

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v46.0.1

    # - name: Scan changed files for leaking password
    #   if: steps.changed-files.outputs.any_changed == 'true'
    #   uses: gitleaks/gitleaks-action@v2
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  # ---------------------------------
  # Unit Testing
  # ---------------------------------
  unit_testing:
    needs: ['code_scanning']
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: ["3.10", "3.11"]
        config: [ "default.yaml", "sql.yaml", "inmemory.yaml" ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    #---------------------------------------------------
    # Configuring Python environments.
    #
    # We cache both the pip packages and the installation dir.
    # If the pyproject remains unchanged, we re-use the existing installation dir.
    # If the pyproject has changed, we reinstall everything using the cached pip packages.
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
      
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
        pip install plugins/mongodb plugins/openai plugins/sql
      #---------------------------------------------------



    - name: Lint and type-check
      run: |
        make lint-and-type-check


    - name: Unit Testing
      run: |
        make unit_testing pytest_arguments="--cov=superduper --cov-report=xml" SUPERDUPER_CONFIG=test/configs/${{ matrix.config }}

    - name: Usecase Testing
      run: |
        make usecase_testing SUPERDUPER_CONFIG=test/configs/${{ matrix.config }}
